from flask import *
import sqlite3
from functools import wraps

app=Flask(__name__)


app.secret_key="you-will-never-guess"
def login_required(f):
    @wraps(f)
    def wrap(*args, **kwargs):
        if 'logged_in' in session:
            return f(*args, **kwargs)
        else:
            
            return redirect(url_for('login'))
    return wrap
	
@app.route('/')
def show_posts():
	db=sqlite3.connect('blog.db')
	cur=db.execute('''SELECT * FROM POSTS''')
	c=db.execute('''SELECT * FROM comments''')
	posts = [dict(title=row[0],comment=row[1]) for row in cur.fetchall()]
	comments = [dict(comments=row[0]) for row in c.fetchall()]
	db.close()
	return render_template('show_post.html',posts=posts,comments=comments)

@app.route("/login",methods=['GET','POST'])
def login():
	error=None
	db=sqlite3.connect('blog.db')
	cur=db.execute('''SELECT * FROM POSTS''')
	c=db.execute('''SELECT * FROM comments''')
	posts = [dict(title=row[0],comment=row[1]) for row in cur.fetchall()]
	comments = [dict(comments=row[0]) for row in c.fetchall()]
	db.close()
	if request.method =='POST':
		if request.form['username'] != 'admin' or request.form['password'] != 'admin':
			error ='Invalid Credentials.Please try again'
		else:
			session['logged_in'] = True
			flash('you are just logged in!')
			
			return redirect(url_for('home'))
	return render_template('login.html',error=error,posts=posts,comments=comments)



@app.route('/home', methods=['GET','POST'])
@login_required
def home():
	if request.method=='GET':
		db=sqlite3.connect('blog.db')
		
		cur=db.execute('''SELECT * FROM POSTS''')
		c=db.execute('''SELECT * FROM comments''')
		posts = [dict(title=row[0],comment=row[1]) for row in cur.fetchall()]
		comments = [dict(comments=row[0]) for row in c.fetchall()]
		db.close()
		return render_template("add_post.html",posts=posts,comments=comments)

	else:
		
		db=sqlite3.connect('blog.db')
		db.execute("INSERT INTO POSTS VALUES (?,?)",
				[request.form['title'],request.form['comment']])
		db.execute("INSERT INTO comments VALUES (?)",
				[request.form['comments']])
		db.commit()
		return redirect(url_for('home'))

@app.route('/logout')
@login_required
def logout():
	session.pop('logged_in',None)
	flash('you are just logged out!')
	return redirect(url_for('/'))





app.run(debug=True)
